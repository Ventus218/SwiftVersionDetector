name: tests

on: [pull_request]

jobs:

  generate-linuxmain:
    name: Generating Linuxmain.swift for Linux testing
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generating LinuxMain.swift
        run: swift test --generate-linuxmain -v
      - name: Uploading LinuxMain.swift artifact
        uses: actions/upload-artifact@v3
        with:
          name: LinuxMain.swift
          path: Tests/LinuxMain.swift
          retention-days: 1

  ubuntu:
    name: Swift ${{ matrix.swift }} on ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        swift: ["5.0", "5.1", "5.2", "5.3", "5.4", "5.5", "5.6", "latest"]
    container:
      image: swift:${{ matrix.swift }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Downloading LinuxMain.swift artifact
        uses: actions/download-artifact@v3
        with:
          name: LinuxMain.swift
          path: Tests/LinuxMain.swift
      - run: ls -a
      - run: ls -a Tests/
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v
        
  ubuntu-swift-5_0:
    name: Swift 5.0 on ubuntu-latest
    needs: generate-linuxmain
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        swift: ["5.0"]
    container:
      image: swift:${{ matrix.swift }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v
        
  macos:
    name: Default Swift version on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-10.15", "macos-11", "macos-12", "macos-latest"]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v
        
